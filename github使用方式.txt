git init 初始化版本控制系统 

git add readme.txt  放入缓存区

git commit -m "wrote a readme file" 缓存区的内容提交到仓库中。

git status  查看仓库状态

git diff 查看修改的内容

git log 查看历史记录 查看版本id

git reset --hard HEAD^   返回上一个版本。^^ 两个版本 HEAD~100 上100个版本

git reset --hard 3628164   返回到对应id 的版本

git reflog  查看版本提交命令

git diff HEAD -- readme.txt  查看工作区与最新版本库的区别。

git checkout -- readme.txt意思就是，把readme.txt文件在工作区的修改全部撤销

这里有两种情况：
一种是readme.txt自修改后还没有被放到暂存区，现在，撤销修改就回到和版本库一模一样的状态；
一种是readme.txt已经添加到暂存区后，又作了修改，现在，撤销修改就回到添加到暂存区后的状态。

总之，就是让这个文件回到最近一次git commit或git add时的状态。

git reset HEAD file可以把暂存区的修改撤销掉（unstage），重新放回工作区


 git remote add origin git@github.com:michaelliao/learngit.git  添加远程仓库。

$ git push -u origin master  由于远程库是空的，我们第一次推送master分支时，加上了-u参数，Git不但会把本地的master分支内容推送的远程新的master分支，还会把本地的master分支和远程的master分支关联起来，在以后的推送或者拉取时就可以简化命令。

$ git push origin master


$ git pull origin master  取回远程仓库。

$ git branch dev  创建分支
$ git checkout dev 切换分支
$ git checkout -b dev   创建并切换分支

$ git branch 查看分支。


git merge命令用于合并指定分支到当前分支。

$ git branch -d dev 删除分支。
